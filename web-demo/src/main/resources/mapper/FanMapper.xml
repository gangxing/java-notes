<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.learn.webdemo.mapper.FanMapper">

    <resultMap id="BaseResultMap" type="com.learn.webdemo.model.entity.FanEntity">
        <id column="id" property="id"/>

        <result property="userId" column="user_id"/>
        <result property="fanUserId" column="fan_user_id"/>
        <result property="delFlag" column="del_flag"/>

        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,
        user_id,
        fan_user_id,
        del_flag,
        created_at,
        updated_at
    </sql>

    <sql id="Base_Sort">
        <if test="sort != null">
            ORDER BY
            <foreach collection="sort" item="order" index="index"
                     open="" separator="," close="">
                ${order.property} ${order.direction}
            </foreach>
        </if>

    </sql>

    <sql id="Base_Page">
        <if test="page != null">
            limit #{page.offset}, #{page.pageSize}
        </if>
    </sql>

    <sql id="Query_Where">
        <where>
            1=1
            <if test="query.ids!=null">
                and id IN
                <foreach collection="query.ids" item="item" index="index"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="query.userId != null">
                AND user_id = #{query.userId}
            </if>
            <if test="query.fanUserId != null">
                AND fan_user_id = #{query.fanUserId}
            </if>
            <if test="query.delFlag != null">
                AND del_flag = #{query.delFlag}
            </if>
            <if test="query.createdAtMinInclude != null">
                AND created_at <![CDATA[ >= ]]> #{query.createdAtMinInclude}
            </if>
            <if test="query.createdAtMinExclude != null">
                AND created_at <![CDATA[ > ]]> #{query.createdAtMinExclude}
            </if>
            <if test="query.createdAtMaxInclude != null">
                AND created_at <![CDATA[ <= ]]> #{query.createdAtMaxInclude}
            </if>
            <if test="query.createdAtMaxExclude != null">
                AND created_at <![CDATA[ < ]]> #{query.createdAtMaxExclude}
            </if>
            <if test="query.updatedAtMinInclude != null">
                AND updated_at <![CDATA[ >= ]]> #{query.updatedAtMinInclude}
            </if>
            <if test="query.updatedAtMinExclude != null">
                AND updated_at <![CDATA[ > ]]> #{query.updatedAtMinExclude}
            </if>
            <if test="query.updatedAtMaxInclude != null">
                AND updated_at <![CDATA[ <= ]]> #{query.updatedAtMaxInclude}
            </if>
            <if test="query.updatedAtMaxExclude != null">
                AND updated_at <![CDATA[ < ]]> #{query.updatedAtMaxExclude}
            </if>
        </where>
    </sql>
    <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT
        <include refid="Base_Column_List"/>
        FROM fan
        WHERE id = #{id}
    </select>

    <select id="selectOne" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM fan
        <include refid="Query_Where"/>
    </select>

  <select id="selectByUserIdAndFanUserId" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM fan
    where user_id=#{userId} and fan_user_id=#{fanUserId}
  </select>

    <select id="selectList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM fan
        <include refid="Query_Where"/>
        <include refid="Base_Sort"/>
    </select>

    <select id="pageList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM fan
        <include refid="Query_Where"/>
        <include refid="Base_Sort"/>
        <include refid="Base_Page"/>
    </select>
    <select id="count" resultType="java.lang.Integer">
        SELECT
        COUNT(*)
        FROM fan
        <include refid="Query_Where"/>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyColumn="id" keyProperty="id"
            parameterType="com.learn.webdemo.model.entity.FanEntity">
     INSERT INTO fan (
     user_id,
     fan_user_id,
     del_flag,
     created_at,
     updated_at
     )
     VALUES (
     #{userId},
     #{fanUserId},
     #{delFlag},
     #{createdAt},
     #{updatedAt}
     )
    </insert>

    <insert id="insertBatch" parameterType="java.util.Map">
     INSERT INTO fan (
     user_id,
     fan_user_id,
     del_flag,
     created_at,
     updated_at
     )
     VALUES
     <foreach collection="entities" item="item" index="index" separator=",">
     (
     #{item.userId},
     #{item.fanUserId},
     #{item.delFlag},
     #{item.createdAt},
     #{item.updatedAt}
     )
     </foreach>
    </insert>

    <sql id="set">
        <set>
           <if test="update.userId != null">
                user_id = #{update.userId},
           </if>
           <if test="update.fanUserId != null">
                fan_user_id = #{update.fanUserId},
           </if>
           <if test="update.delFlag != null">
                del_flag = #{update.delFlag},
           </if>
           <if test="update.updatedAt != null">
                updated_at = #{update.updatedAt}
           </if>
        </set>
    </sql>

    <update id="updateById" parameterType="java.util.Map">
        UPDATE fan
        <include refid="set"></include>
        WHERE id = #{update.id}
    </update>


  <update id="delete" parameterType="java.lang.Long">
    delete from  fan where user_id=#{userId} and fan_user_id=#{fanUserId}
  </update>
</mapper>
